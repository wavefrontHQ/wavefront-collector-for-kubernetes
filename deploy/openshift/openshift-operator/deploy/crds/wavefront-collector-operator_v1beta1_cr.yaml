apiVersion: wavefront.com/v1beta1
kind: WavefrontCollector
metadata:
  name: wavefrontcollector
spec:
  
  # Default values copied from <project_dir>/helm-charts/wavefrontcollector/values.yaml
  
  # Default values for wavefrontcollector.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.
  clusterName: OPENSHIFT_CLUSTER_NAME
  wavefront:
    url: https://YOUR_CLUSTER_NAME.wavefront.com
    token: YOUR_API_TOKEN
  collector:
    enabled: true
    ## If set to true, metrics will be sent to Wavefront via a Wavefront Proxy.
    ## When true you must either specify a value for `collector.proxyAddress` or set `proxy.enabled` to true
    ## If set to false, metrics will be sent to Wavefront via the Direct Ingestion API
    useProxy: true

    ## Can be used to specify a specific address for the Wavefront Proxy
    ## The proxy can be anywhere network reachable including outside of the cluster
    ## Required if `collector.useProxy` is true and `proxy.enabled` is false
    # proxyAddress: wavefront-proxy:2878

    ## This is the Kubelet summary api endpoint and options.
    ## Ref: https://github.com/wavefrontHQ/wavefront-kubernetes-collector/blob/master/docs/configuration.md#kubernetes-source
    kubernetesSource: kubernetes.summary_api:https://kubernetes.default.svc?useServiceAccount=true&kubeletHttps=true&kubeletPort=10250&insecure=true

    ## If set to true, any Kubernetes labels will be applied to metrics as tags. Defaults to false.
    includeLabels: true

    ## If set to true, all container metrics will be sent to Wavefront.
    ## When set to false, container level metrics are skipped (pod level and above are still sent to Wavefront). Defaults to true.
    # includeContainers: true

    ## The global prefix to be added for Kubernetes metrics. Defaults to `kubernetes.`.
    ## This does not apply to other sources. Use source level prefixes for sources other than the Kubernetes source.
    # prefix: kubernetes.

    ## max number of CPUs that can be used simultaneously. Less than 1 for default (number of cores)
    # maxProcs: 0

    ## The resolution at which the collector will retain metrics. (default 1m)
    # interval: 1m
    ## Timeout for exporting data (default 20s)
    # sinkDelay: 20s

    ## log level. Uses V logs (glog)
    # logVerbosity: 0

    ## Discovery capabilities of Wavefront Collector
    discovery:
      enabled: true

    ## Rules based discovery collection configuration
    ## Ref: https://github.com/wavefrontHQ/wavefront-kubernetes-collector/blob/master/docs/discovery.md#rules-based-discovery
    #   config:
    #     config.yaml: |
    #       global:
    #         discovery_interval: 10m
    #       prom_configs:
    #       - name: kube-dns-discovery
    #         labels:
    #           k8s-app: kube-dns
    #         port: 10055
    #         path: /metrics
    #         scheme: http
    #         source: kube-dns
    #         prefix: kube.dns.
    #         tags:
    #           env: prod
    #           collector: wavefront-collector

    ## Wavefront Collector resource requests and limits
    ## Make sure to keep requests and limits equal to keep the pods in the Guaranteed QoS class
    ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
    resources:
      requests:
        cpu: 200m
        memory: 256Mi
      limits:
        cpu: 200m
        memory: 256Mi

  ## Wavefront Proxy is a metrics forwarder that is used to relay metrics to the Wavefront SaaS service.
  ## It can receive metrics from the Wavefront Collector as well as other metrics collection services
  ## within your cluster. The proxy also supports preprocessor rules to allow you to further filter
  ## and enhance your metric names, and tags. Should network connectivity fall between the proxy and
  ## Wavefront SaaS service, the proxy will buffer metrics, which will be flushed when connectivity resumes.
  ## Ref: https://docs.wavefront.com/proxies.html
  proxy:
    enabled: true
    image:
      repository: wavefronthq/proxy
      tag: 9.7
      pullPolicy: IfNotPresent

    ## The port number the proxy will listen on for metrics in Wavefront data format.
    ## This is usually 2878
    port: 2878

    ## The port nubmer the proxy will listen on for tracing spans in Wavefront trace data format.
    ## This is usually 30000
    # tracePort: 30000

    ## The port nubmer the proxy will listen on for tracing spans in Jaeger data format.
    ## This is usually 30001
    # jaegerPort: 30001

    ## The port nubmer the proxy will listen on for tracing spans in Zipkin data format.
    ## This is usually 9411
    # zipkinPort: 9411

    ## Sampling rate to apply to tracing spans sent to the proxy.
    ## This rate is applied to all data formats the proxy is listening on.
    ## Value should be between 0.0 and 1.0.  Default is 1.0
    # traceSamplingRate: 0.25

    ## When this is set to a value greater than 0,
    ## spans that are greater than or equal to this value will be sampled.
    # traceSamplingDuration: 500

    ## Any configuration property can be passed to the proxy via command line args in
    ## in the format: `--<property_name> <value>`. Multiple properties can be specified
    ## separated by whitespace.
    ## Ref: https://docs.wavefront.com/proxies_configuring.html
    # args:

    ## Proxy is a Java application. By default Java will consume upto 4G of heap memory.
    ## This can be used to override the default. Uses the `-Xmx` command line option for java
    # heap: 1024m

    ## Preprocessor rules is a powerful way to apply filtering or to enhance metrics as they flow
    ## through the proxy. You can configure the rules here. By default a rule to drop Kubernetes
    ## generated labels is applied to remove unecessary and often noisy tags.
    ## Ref: https://docs.wavefront.com/proxies_preprocessor_rules.html
    preprocessor:
      rules.yaml: |
        '2878':
          - rule    : drop-generated-label-tags
            action  : dropTag
            tag     : label\.(controller-revision-hash|pod-template-.*|.*kubernetes\.io.*)
    #       - rule    : add-cluster-tag
    #         action  : addTag
    #         tag     : cluster
    #         value   : {{ .Values.clusterName | quote }}

  ## kube-state-metrics are used to get metrics about the state of the Kubernetes scheduler
  ## If enabled the kube-state-metrics chart will be installed as a subchart and the collector
  ## will be configured to capture metrics.
  kubeStateMetrics:
    enabled: true

  ## Openshift integration can be enabled here
  ## If enabled is true, you must specify `collector.kubernetesSource` to be a valid
  ## summary api endpoint within your Openshift environment.
  openshift:
    enabled: true

    ## Wavefront proxy requires a persistent volume claim for its metrics buffers in Openshift
    ## If `proxy.enabled` is true, this must be set to the name of a persistent volume claim
    ## that the proxy can use for its buffers.
    pvcName: WF_PROXY_STORAGE

  nameOverride: ""
  fullnameOverride: ""
  
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  
  nodeSelector: {}
  
  tolerations: []
  
  affinity: {}
