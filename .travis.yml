language: go

# safelist
branches:
  only:
    - master

# workaround for case sensitive build issues with wavefrontHQ
go_import_path: github.com/wavefronthq/wavefront-collector-for-kubernetes

# Don't email me the results of the test runs.
notifications:
  email: false

go:
  - "1.15.x"
  - "1.16.x"
  - master
allow_failures:
  - go: "1.16.x"
  - go: master
fast_finish: true
script:
  - diff -u <(echo -n) <(goimports -d $(find . -type f -name '*.go' -not -path "./vendor/*"))
  - go test -v -race ./...                   # Run all the tests with the race detector enabled
  - go vet -composites=false ./...           # go vet is the official Go static analyzer
jobs:
  include:
    - stage: integration tests
      go: "1.15.x"
      env: "DCH_VERSION=2.0.0 OS=linux ARCH=amd64"
      script:
        - openssl aes-256-cbc -K $encrypted_ad13726c9b2f_key -iv $encrypted_ad13726c9b2f_iv -in travis.tar.gz.enc -out travis.tar.gz -d
        - if [ ! -d ${HOME}/google-cloud-sdk ]; then
          curl https://sdk.cloud.google.com > install.sh; bash install.sh --disable-prompts >/dev/null;
          fi
        - tar -xzf travis.tar.gz
        - curl -fsSL "https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v${DCH_VERSION}/docker-credential-gcr_${OS}_${ARCH}-${DCH_VERSION}.tar.gz" | tar xz --to-stdout ./docker-credential-gcr > ${HOME}/bin/docker-credential-gcr && chmod +x ${HOME}/bin/docker-credential-gcr
        - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
        - chmod +x ./kubectl
        - sudo mv ./kubectl /usr/local/bin/kubectl
        - curl https://get.helm.sh/helm-v3.6.3-linux-amd64.tar.gz
        - tar -zxvf helm-v3.6.3-linux-amd64.tar.gz
        - chmod +x ./kubectl
        - mv ./helm $HOME/bin
        - gcloud auth activate-service-account --key-file wavefront-gcp-dev-bc34048ac422.json
        - gcloud config set project wavefront-gcp-dev
        - docker-credential-gcr config --token-source="gcloud"
        - docker-credential-gcr configure-docker --registries="us.gcr.io"
        - cat $HOME/.docker/config.json
        - echo "https://us.gcr.io" | docker-credential-gcr get
        - GKE_CLUSTER_NAME=k8s-saas-travis-ci make gke-connect-to-cluster
        - kubectl cluster-info
        - WAVEFRONT_TOKEN="715af50c-e010-4908-89cd-e2550e805245" make integration-test
